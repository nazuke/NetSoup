<html>
	<head>






		<i18n>

			<!-- This XML/JavaScript component is automatically generated by
					 the HyperGlot classes. -->


			<catalogue>

				<!-- The "catalogue" element contains material for future
						 reference by the script generator. These strings are
						 not used by the XHTML document but are required if
						 further languages are to be added. -->

				<set lang="default">

					<i18nString index="0" lang="default" content="String One"/>
					<i18nString index="1" lang="default" content="String Two"/>
					<i18nString index="2" lang="default" content="String Three"/>

				</set>

				<set lang="en">

					<i18nString index="0" lang="en" content="String One"/>
					<i18nString index="1" lang="en" content="String Two"/>
					<i18nString index="2" lang="en" content="String Three"/>

				</set>

			</catalogue>


			<script language="JavaScript">


				var Strings  = new Array(0);
				var Language = new String();
				var NavName  = new String( navigator.appName );
				if( NavName.indexOf( "etscape" ) > 0 ) {
					Language = navigator.language;
				} else if( NavName.indexOf( "xplorer" ) > 0 ) {
					Language = navigator.userLanguage;
				} else {
					Language = navigator.language;
				}


				Strings["default"] = new Lang();         // The "default" set patches unsupported language codes.
				Strings["default"].add("String One");
				Strings["default"].add("String Two");
				Strings["default"].add("String Three");

				Strings["de"] = new Lang();
				Strings["de"].add("String Ein");
				Strings["de"].add("String Zwei");
				Strings["de"].add("String Drei");


				function Lang() {
					// This method is the Lang object constructor.
					var obj     = new Object;
					obj.strings = new Array;
					obj.length  = 0;
					obj.add     = new Function( "theString",
												"this.strings[this.length] = new String(theString);\
												 this.length++;" );
					obj.get     = new Function( "index",
												"return(this.strings[index]);" );
					return( obj );
				}
				
				
				function i18nString( index ) {
					// This function returns the string in the browser's language.
					var obj = Strings[Language] || Strings["default"];
					return( obj.get(index) );
				}


			</script>


		</i18n>






		<title>
			<script>document.write( i18nString(0) );</script>
		</title>
	</head>
	<body>
		<p>
			<script>document.write(i18nString(2));</script>
		</p>
		<p>
			<script>document.write(i18nString(1));</script>
		</p>
		<p>
			<script>document.write(i18nString(0));</script>
		</p>
	</body>
</html>
